{"version":3,"sources":["types/lang.ts","containers/errorboundary.tsx","contexts/base.ts","contexts/lang.ts","api/gsheets.ts","hooks/useFetch.ts","hooks/useEffectOnce.ts","containers/products.tsx","utils/readFetch.ts","components/lang.tsx","containers/header.tsx","App.tsx","index.tsx"],"names":["lang","ErrorBoundary","state","hasError","error","errorInfo","this","props","children","console","log","Component","Base","callback","setState","produce","draft","Container","Lang","ILang","en","data","save","key","defaultValue","hasOwnProperty","DEFAULT_OPTIONS","sheetId","returnAllResults","options","Promise","resolve","reject","GSheets","e","promise","useState","status","setStatus","result","setResult","suspender","setSuspender","promiseResult","then","res","catch","useEffect","read","useStyles","makeStyles","theme","icon","marginRight","spacing","heroContent","backgroundColor","palette","background","paper","padding","heroButtons","marginTop","cardGrid","paddingTop","paddingBottom","card","height","display","flexDirection","cardMedia","cardContent","flexGrow","footer","object","classes","sheets","maxWidth","className","Grid","container","map","item","id","xs","sm","md","Card","CardMedia","image","image_1","title","image_1_title","CardContent","Typography","gutterBottom","variant","component","name","description","CardActions","Button","size","color","to","getText","root","menuButton","AppBar","position","Toolbar","IconButton","edge","aria-label","App","useFetch","gsheets","fallback","ReactDOM","render","StrictMode","inject","document","getElementById"],"mappings":"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","file":"static/js/main.d9605e80.chunk.js","sourcesContent":["enum lang {\r\n  en = 'en',\r\n  ph = 'ph',\r\n}\r\n\r\nexport default lang;\r\n","import React, { Component } from 'react';\r\n\r\ninterface IState {\r\n  hasError: boolean;\r\n}\r\n\r\nclass ErrorBoundary extends Component {\r\n  state: IState = {\r\n    hasError: false,\r\n  };\r\n\r\n  static getDerivedStateFromError(error: Error) {\r\n    console.log(error);\r\n    // Update state so the next render will show the fallback UI.\r\n    return { hasError: true };\r\n  }\r\n\r\n  componentDidCatch(error: any, errorInfo: any) {\r\n    // You can also log the error to an error reporting service\r\n    // logErrorToMyService(error, errorInfo);\r\n    // console.error(error, errorInfo);\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      // You can render any custom fallback UI\r\n      return <h1>Something went wrong.</h1>;\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import { Container } from 'unstated';\r\nimport produce from 'immer';\r\n\r\nexport default class Base extends Container<{}> {\r\n  save(callback: Function) {\r\n    return this.setState(\r\n      produce((draft) => {\r\n        callback(draft);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import Base from './base';\r\nimport ILang from 'types/lang';\r\nimport en from 'lang/en.json';\r\n\r\ninterface LangObject {\r\n  [key: string]: string;\r\n}\r\n\r\ninterface IState {\r\n  lang: ILang;\r\n  data: LangObject;\r\n}\r\n\r\nclass Lang extends Base {\r\n  state: IState = {\r\n    lang: ILang.en,\r\n    data: en,\r\n  };\r\n\r\n  setLang(lang: ILang) {\r\n    this.save((draft: IState) => (draft.lang = lang));\r\n  }\r\n\r\n  getText(key: string, defaultValue: string = '') {\r\n    return this.state.data.hasOwnProperty(key)\r\n      ? this.state.data[key]\r\n      : defaultValue;\r\n  }\r\n}\r\n\r\nexport { Lang };\r\nexport default new Lang();\r\n","import GSheets from 'g-sheets-api';\r\n\r\nconst DEFAULT_OPTIONS = {\r\n  sheetId: '1OUgaAxfeUXsGgyVSjwltjm9MGhjSraxuo61jUgBrN6Q',\r\n  returnAllResults: true,\r\n};\r\n\r\nexport default (options = DEFAULT_OPTIONS) =>\r\n  new Promise((resolve, reject) => {\r\n    try {\r\n      GSheets({ ...DEFAULT_OPTIONS, ...options }, resolve);\r\n    } catch (e) {\r\n      reject(e);\r\n    }\r\n  });\r\n","import { useState } from 'react';\r\nimport useEffectOnce from 'hooks/useEffectOnce';\r\n\r\nconst LOADING = 'loading';\r\nconst ERROR = 'error';\r\nconst SUCCESS = 'success';\r\n\r\nexport default (promise: any) => {\r\n  const [status, setStatus] = useState<string>(LOADING);\r\n  const [result, setResult] = useState<any>();\r\n  const [suspender, setSuspender] = useState<Promise<any>>(\r\n    new Promise(() => {})\r\n  );\r\n\r\n  useEffectOnce(() => {\r\n    const promiseResult = promise()\r\n      .then((res: any) => {\r\n        setResult(res);\r\n\r\n        setStatus(SUCCESS);\r\n      })\r\n      .catch((e: Error) => {\r\n        setResult(e);\r\n        setStatus(ERROR);\r\n      });\r\n\r\n    setSuspender(promiseResult);\r\n  });\r\n\r\n  return {\r\n    read: () => {\r\n      switch (status) {\r\n        case LOADING:\r\n          throw suspender;\r\n        case ERROR:\r\n          throw result;\r\n        case SUCCESS:\r\n        default:\r\n          return result;\r\n      }\r\n    },\r\n  };\r\n};\r\n","import { useEffect } from 'react';\r\n\r\nexport default (callback: React.EffectCallback) => useEffect(callback, []);\r\n","import React from 'react';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport readFetch from 'utils/readFetch';\r\nimport { IList, IItem } from 'types/products';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  icon: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  heroContent: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(8, 0, 6),\r\n  },\r\n  heroButtons: {\r\n    marginTop: theme.spacing(4),\r\n  },\r\n  cardGrid: {\r\n    paddingTop: theme.spacing(8),\r\n    paddingBottom: theme.spacing(8),\r\n  },\r\n  card: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  cardMedia: {\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  cardContent: {\r\n    flexGrow: 1,\r\n  },\r\n  footer: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(6),\r\n  },\r\n}));\r\n\r\nexport default (props: any) => {\r\n  const classes = useStyles();\r\n\r\n  const result: IList = readFetch(props.sheets);\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\" className=\"p-sm p-4\">\r\n      <Grid container spacing={4}>\r\n        {result.map((item: IItem) => (\r\n          <Grid item key={item.id} xs={12} sm={6} md={4}>\r\n            <Card className={classes.card}>\r\n              <CardMedia\r\n                className={classes.cardMedia}\r\n                image={item.image_1}\r\n                title={item.image_1_title}\r\n              />\r\n              <CardContent className={classes.cardContent}>\r\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                  {item.name}\r\n                </Typography>\r\n                <Typography>{item.description}</Typography>\r\n              </CardContent>\r\n              <CardActions>\r\n                <Button size=\"small\" color=\"primary\">\r\n                  View\r\n                </Button>\r\n                <Button size=\"small\" color=\"primary\">\r\n                  Edit\r\n                </Button>\r\n              </CardActions>\r\n            </Card>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n","interface IFetch {\r\n  read: Function;\r\n}\r\n\r\nexport default (object: IFetch | undefined) => object && object.read();\r\n","import React from 'react';\r\n\r\nimport { Subscribe } from 'unstated';\r\n\r\nimport { Lang } from 'contexts/lang';\r\n\r\ninterface ILangComponent {\r\n  children: string;\r\n  defaultValue?: string;\r\n}\r\n\r\nexport default ({ children, defaultValue = '' }: ILangComponent) => (\r\n  <Subscribe to={[Lang]}>\r\n    {(lang: Lang) => {\r\n      return lang.getText(children, defaultValue);\r\n    }}\r\n  </Subscribe>\r\n);\r\n","import React from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Lang from 'components/lang';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <AppBar position=\"sticky\">\r\n      <Toolbar variant=\"dense\">\r\n        <IconButton\r\n          edge=\"start\"\r\n          className={classes.menuButton}\r\n          color=\"inherit\"\r\n          aria-label=\"menu\"\r\n        >\r\n          <MenuIcon />\r\n        </IconButton>\r\n\r\n        <Typography variant=\"h6\" color=\"inherit\">\r\n          <Lang>companyName</Lang>\r\n        </Typography>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n","import React, { Suspense } from 'react';\n\nimport gsheets from 'api/gsheets';\nimport useFetch from 'hooks/useFetch';\nimport Products from 'containers/products';\nimport Header from 'containers/header';\n\nconst App: React.FC = () => {\n  const sheets = useFetch(gsheets);\n\n  return (\n    <>\n      <Header />\n      <Suspense fallback={'<h1>Loading...</h1>'}>\n        <Products sheets={sheets} />\n      </Suspense>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'unstated';\n\nimport './index.css';\n\nimport ErrorBoundary from './containers/errorboundary';\n\nimport Lang from 'contexts/lang';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ErrorBoundary>\n      <Provider inject={[Lang]}>\n        <App />\n      </Provider>\n    </ErrorBoundary>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}